     1                                  ; Daniel Mitchell
     2                                  ; p5 - Matrix Management
     3                                  ; October 4, 2020
     4                                  ; Looping through matrix and such
     5                                  
     6                                  
     7                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Test Case 1 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     8                                  ROWS:	EQU	5	; constant of rows equal to 5
     9                                  COLS:	EQU	7	; constant of rows equal to 7
    10                                  
    11                                  SECTION .data
    12                                  ; define data/variables here.  Think DB, DW, DD, DQ
    13 00000000 010000000200000003-     MyMatrix:	dd 1, 2, 3, 4, 5, 6, 7
    14 00000009 000000040000000500-
    15 00000012 000006000000070000-
    16 0000001B 00                 
    17 0000001C 08000000090000000A-     		dd 8, 9, 10, 11, 12, 13, 14
    18 00000025 0000000B0000000C00-
    19 0000002E 00000D0000000E0000-
    20 00000037 00                 
    21 00000038 0F0000001000000011-     		dd 15, 16, 17, 18, 19, 20, 21
    22 00000041 000000120000001300-
    23 0000004A 000014000000150000-
    24 00000053 00                 
    25 00000054 160000001700000018-     		dd 22, 23, 24, 25, 26, 27, 28
    26 0000005D 000000190000001A00-
    27 00000066 00001B0000001C0000-
    28 0000006F 00                 
    29 00000070 1D0000001E0000001F-     		dd 29, 30, 31, 32, 33, 34, 35
    30 00000079 000000200000002100-
    31 00000082 000022000000230000-
    32 0000008B 00                 
    33                                  
    34                                  SECTION .bss
    35                                  ; define uninitialized data here
    36 00000000 <res 00000014>          RowSums:	RESD ROWS
    37 00000014 <res 0000001C>          ColSums:	RESD COLS
    38 00000030 <res 00000004>          Sum:		RESD 1
    39 00000034 <res 00000004>          saveECX:	RESD 1
    40 00000038 <res 00000004>          index:		RESD 1
    41                                  
    42                                  
    43                                  SECTION .text
    44                                  global _main
    45                                  _main:
    46                                  
    47 00000000 C705[00000000]0000-     mov [RowSums], DWORD 0
    48 00000008 0000               
    49 0000000A BB[00000000]            mov ebx, RowSums
    50 0000000F BA[00000000]            mov edx, MyMatrix
    51 00000014 B905000000              mov ecx, ROWS
    52                                  
    53                                  RowSum:		;;sum up row values
    54 00000019 890D[34000000]          	mov [saveECX], ecx
    55 0000001F B907000000              	mov ecx, COLS
    56 00000024 31C0                    	xor eax, eax
    57                                  
    58                                  	innerRowSum:
    59 00000026 0302                    		add eax, [edx]
    60 00000028 83C204                  		add edx, 4
    61 0000002B E2F9                    		loop innerRowSum
    62                                  
    63 0000002D 8903                    	mov [ebx], eax
    64 0000002F 0105[30000000]          	add [Sum], eax
    65 00000035 83C304                  	add ebx, 4
    66 00000038 8B0D[34000000]          	mov ecx, [saveECX]
    67 0000003E E2D9                    	loop RowSum
    68                                  
    69                                  
    70 00000040 31DB                    xor 	ebx, ebx
    71 00000042 31D2                    xor	edx, edx
    72 00000044 31C9                    xor 	ecx, ecx
    73                                  
    74                                  
    75 00000046 C705[38000000]0000-     mov [index], DWORD 0	;;just to be safe 0 out registers before resetting the edx pointer and putting ColSums in ebx
    76 0000004E 0000               
    77 00000050 C705[14000000]0000-     mov [ColSums], DWORD 0
    78 00000058 0000               
    79                                  
    80 0000005A BA[00000000]            mov edx, MyMatrix
    81 0000005F B905000000              mov ecx, ROWS
    82                                  
    83                                  ColSum:
    84 00000064 890D[34000000]          	mov [saveECX], ecx
    85 0000006A B907000000              	mov ecx, COLS
    86 0000006F BB[14000000]            	mov ebx, ColSums
    87 00000074 31C0                    	xor eax, eax
    88                                  
    89                                  	innerColSum:
    90 00000076 0302                    		add eax, [edx]
    91 00000078 0103                    		add [ebx], eax
    92 0000007A 83C204                  		add edx, 4	
    93 0000007D 83C304                  		add ebx, 4
    94                                  
    95 00000080 E2F4                    		loop innerColSum
    96                                  
    97 00000082 8903                    	mov [ebx], eax
    98 00000084 81EB[14000000]          	sub ebx, ColSums ;reset index to column pointer after every full column
    99 0000008A 8B0D[34000000]          	mov ecx, [saveECX]
   100                                  	
   101 00000090 E2D2                    loop ColSum
   102                                  
   103                                  lastBreak: 
   104                                  
   105                                  ; Normal termination code
   106 00000092 B801000000              mov eax, 1
   107 00000097 BB00000000              mov ebx, 0
   108 0000009C CD80                    int 80h
